import { __awaiter, __generator } from "tslib";
import { ClientSecretCredential } from "@azure/identity";
import { getKeyvaultName } from "./utils.common";
import { KeyClient } from "../../src";
import { env, record, setReplaceableVariables, setReplacements } from "@azure/test-utils-recorder";
import { uniqueString } from "./recorderUtils";
import TestClient from "./testClient";
export function authenticate(that) {
    return __awaiter(this, void 0, void 0, function () {
        var keySuffix, recorder, credential, keyVaultName, keyVaultUrl, client, testClient;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    setReplaceableVariables({
                        AZURE_CLIENT_ID: "azure_client_id",
                        AZURE_CLIENT_SECRET: "azure_client_secret",
                        AZURE_TENANT_ID: "azure_tenant_id",
                        KEYVAULT_NAME: "keyvault_name"
                    });
                    keySuffix = uniqueString();
                    setReplacements([
                        function (recording) {
                            return recording.replace(/"access_token":"[^"]*"/g, "\"access_token\":\"access_token\"");
                        },
                        function (recording) {
                            return keySuffix === "" ? recording : recording.replace(new RegExp(keySuffix, "g"), "");
                        }
                    ]);
                    recorder = record(that);
                    return [4 /*yield*/, new ClientSecretCredential(env.AZURE_TENANT_ID, env.AZURE_CLIENT_ID, env.AZURE_CLIENT_SECRET)];
                case 1:
                    credential = _a.sent();
                    keyVaultName = getKeyvaultName();
                    keyVaultUrl = "https://" + keyVaultName + ".vault.azure.net";
                    client = new KeyClient(keyVaultUrl, credential);
                    testClient = new TestClient(client);
                    return [2 /*return*/, { recorder: recorder, client: client, credential: credential, testClient: testClient, keySuffix: keySuffix }];
            }
        });
    });
}
//# sourceMappingURL=testAuthentication.js.map