import * as coreHttp from "@azure/core-http";
import * as Models from "../models";
import { StorageClientContext } from "../storageClientContext";
/** Class representing a Service. */
export declare class Service {
    private readonly client;
    /**
     * Create a Service.
     * @param {StorageClientContext} client Reference to the service client.
     */
    constructor(client: StorageClientContext);
    /**
     * Sets properties for a storage account's Queue service endpoint, including properties for Storage
     * Analytics and CORS (Cross-Origin Resource Sharing) rules
     * @param properties The StorageService properties.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServiceSetPropertiesResponse>
     */
    setProperties(properties: Models.QueueServiceProperties, options?: Models.ServiceSetPropertiesOptionalParams): Promise<Models.ServiceSetPropertiesResponse>;
    /**
     * @param properties The StorageService properties.
     * @param callback The callback
     */
    setProperties(properties: Models.QueueServiceProperties, callback: coreHttp.ServiceCallback<void>): void;
    /**
     * @param properties The StorageService properties.
     * @param options The optional parameters
     * @param callback The callback
     */
    setProperties(properties: Models.QueueServiceProperties, options: Models.ServiceSetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;
    /**
     * gets the properties of a storage account's Queue service, including properties for Storage
     * Analytics and CORS (Cross-Origin Resource Sharing) rules.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServiceGetPropertiesResponse>
     */
    getProperties(options?: Models.ServiceGetPropertiesOptionalParams): Promise<Models.ServiceGetPropertiesResponse>;
    /**
     * @param callback The callback
     */
    getProperties(callback: coreHttp.ServiceCallback<Models.QueueServiceProperties>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    getProperties(options: Models.ServiceGetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<Models.QueueServiceProperties>): void;
    /**
     * Retrieves statistics related to replication for the Queue service. It is only available on the
     * secondary location endpoint when read-access geo-redundant replication is enabled for the
     * storage account.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServiceGetStatisticsResponse>
     */
    getStatistics(options?: Models.ServiceGetStatisticsOptionalParams): Promise<Models.ServiceGetStatisticsResponse>;
    /**
     * @param callback The callback
     */
    getStatistics(callback: coreHttp.ServiceCallback<Models.QueueServiceStatistics>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    getStatistics(options: Models.ServiceGetStatisticsOptionalParams, callback: coreHttp.ServiceCallback<Models.QueueServiceStatistics>): void;
    /**
     * The List Queues Segment operation returns a list of the queues under the specified account
     * @param [options] The optional parameters
     * @returns Promise<Models.ServiceListQueuesSegmentResponse>
     */
    listQueuesSegment(options?: Models.ServiceListQueuesSegmentOptionalParams): Promise<Models.ServiceListQueuesSegmentResponse>;
    /**
     * @param callback The callback
     */
    listQueuesSegment(callback: coreHttp.ServiceCallback<Models.ListQueuesSegmentResponse>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    listQueuesSegment(options: Models.ServiceListQueuesSegmentOptionalParams, callback: coreHttp.ServiceCallback<Models.ListQueuesSegmentResponse>): void;
}
//# sourceMappingURL=service.d.ts.map